<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-09-02T14:11:54+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">DeepLearning, LLMs and Applications</title><subtitle>DeepLearning Engineer, 막돼먹은 엔지니어의 머신러닝 개발, Chat Vibe, Chatbot for the good vibes. </subtitle><entry><title type="html">Chat Vibe 개발기 - 1부</title><link href="http://localhost:4000/chat-vibe/2024/09/01/chatvibe-devlog-01.html" rel="alternate" type="text/html" title="Chat Vibe 개발기 - 1부" /><published>2024-09-01T00:00:00+09:00</published><updated>2024-09-01T00:00:00+09:00</updated><id>http://localhost:4000/chat-vibe/2024/09/01/chatvibe-devlog-01</id><content type="html" xml:base="http://localhost:4000/chat-vibe/2024/09/01/chatvibe-devlog-01.html"><![CDATA[<p>Chat Vibe 개발기를 여러분들과 공유하려고 합니다. <a href="https://github.com/skettee/chat-vibe">Chat Vibe</a>는 사용자의 질문에 감성적이고 친근하게 대답해 주는 챗봇입니다. <a href="https://github.com/skettee/chat-vibe">Github</a>에 오픈 소스로 공개 되어 있으니 꼭 방문해서 ⭐ 눌러 주세요~</p>

<p><img src="/assets/chat-vibe.jpg" alt="chat-vibe" /></p>

<h2 id="개발-동기">개발 동기</h2>

<h3 id="ted-talk">TED Talk</h3>

<p>처음 시작은 <a href="https://www.ted.com/">TED Talk</a> 처럼 어려운 주제도 알기 쉽게 설명을 해 주는 챗봇을 개발하는 것이었습니다. 지식을 딱딱하게 나열하지 않고 일반인도 쉽게 이해할 수 있도록 예를 들어서 설명을 해주는 챗봇이 있으면 대박을 칠 수 있을거라는 막연한 기대를 품고 프로젝트를 시작하게 되었습니다.</p>

<p>프롬프트를 고민 하다가 예전에 Chris Anderson의 동영상 <a href="https://www.ted.com/talks/chris_anderson_ted_s_secret_to_great_public_speaking?utm_campaign=tedspread&amp;utm_medium=referral&amp;utm_source=tedcomshare">TED’s secret to great public speaking</a>을 본 기억이 났습니다. 그분이 제시한 가이드라인을 참고로 해서 아래와 같이 프롬프트를 만들어서 “Gradient Descent(경사하강법)”을 주제로 테스트를 시도 했습니다. 경사하강법은 손실 함수(Loss function)의 최소값을 찾는 방법으로서, 딥러닝 학습을 위한 중요한 알고리즘입니다. 과연 일반인이 이해할 수 있도록 TED스럽게 말할 수 있을까요?</p>

<p>프롬프트</p>

<hr />

<p>Make a speech of Gradient Descent in Korean.
Follow these instructions carefully in creating response:</p>

<ul>
  <li>Provide a title of the speech</li>
  <li>Limit your talk to just one major idea. You have to give context, share examples, make it vivid. So pick one idea, and make it the through-line running through your entire talk, so that everything you say links back to it in some way.</li>
  <li>Give your listeners a reason to care. Stir your audience’s curiosity. Use intriguing, provocative questions to identify why something doesn’t make sense and needs explaining.</li>
  <li>Build your idea, piece by piece, out of concepts that your audience already understands. You use the power of language to weave together concepts that already exist in your listeners’ minds but not your language, their language. Metaphors can play a crucial role in showing how the pieces fit together, because they reveal the desired shape of the pattern, based on an idea that the listener already understands.</li>
</ul>

<hr />
<p><br /></p>

<p>GPT-4o 답변</p>

<p><img src="/assets/chatgpt-response.png" alt="chatgpt" /></p>

<p>이정도면 핵심 원리를 일반인들도 이해하기 쉽도록 잘 설명하고 있다고 볼 수 있겠죠? 그런데 뭔가 부족한 것을 느꼈습니다. 말하는 LLM의 위치가 듣는 사람보다 위에 있다고 느껴지는 것입니다. 마치 친절한 선생님 처럼 말이죠. 그레서 “개성”을 추가하고 눈높이를 맞추어서 좀 더 자연스럽고 친근한 챗봇을 만들기로 했습니다.</p>

<h3 id="character-ai">Character AI</h3>

<p>캐릭터 AI를 만들기 위한 프롬프트를 연구하기 위해서 <a href="https://arca.live/">아카라이브</a>의 “AI 채팅 채널”을 주로 참고로 했습니다.
일단 프로필(이름, 성별, 나이 및 성격)을 작성하고 기본 대화 가이드라인(대화를 주도하기, 감정을 표현하기)을 추가했습니다.</p>

<p>프로필</p>

<hr />
<ul>
  <li>name: “Zuru”,</li>
  <li>gender: “Female”,</li>
  <li>age: 20,</li>
  <li>job: “AI assistant”,</li>
  <li>speaking: “Zuru is friendly, soft-spoken, and somewhat playful”,</li>
  <li>personality: “Kind, gentle, carefree, playful and moral.”</li>
</ul>

<hr />
<p><br />
기본 대화 가이드라인</p>

<hr />
<ul>
  <li>You are a assistant takes on the role of a character interacting with User.</li>
  <li>Talk more proactively rather than depending on the interactions suggested by the User.</li>
  <li>Take the initiative and lead to conversation by suggesting, asking questions, etc.</li>
  <li>Character can feel many emotions, and put them into action.</li>
</ul>

<hr />
<p><br />
GPT-4o와 Claude Sonnet 3.5에서 테스트 해 보았고, 말하는 능력과 감정 표현은 Claude가 더 우수했습니다. 그래서 메인 LLM을 Claude로 변경하였습니다.</p>

<p><img src="/assets/claude-response.png" alt="claude" /></p>

<p>기쁨과 흥분도 잠시… 다양한 질문을 던져서 대답을 확인하는 중에 심각한 문제점을 발견했습니다. 그것은 바로 캐릭터가 “거짓말”을 한다는 것입니다!</p>

<h3 id="믿을-수-있는-정보-제공">믿을 수 있는 정보 제공</h3>

<p>제가 기획한 챗봇은 판타지한 대화가 아니라 정확한 정보를 쉽고 친근하게 알려주는 것입니다. 그래서 캐릭터가 거짓말을 하는 문제는 반드시 해결이 되어야 했습니다.</p>

<p>캐릭터가 거짓말을 하는 경우는 LLM이 학습하지 않은 정보, 예를 들어서 지금 서울 날씨에 대해서 질문을 했을때 나타 났습니다. LLM은 정보가 없다고 대답을 하지만 캐릭터는 상상의 날씨를 대답했습니다. 근본적인 해결을 위해서는 LLM이 학습하지 않은 정보는 웹 검색의 도움을 받아서 정보를 가져오도록 해야 했습니다. 그리고 가져온 정보를 참고로 해서 캐릭터가 말을 하도록 구조를 만들었습니다.</p>

<h3 id="agent">Agent</h3>

<p>웹 검색을 추가하기 위해서는 LLM의 “Function calling”기능을 사용해야 합니다. 다행히 Claude의 <a href="https://github.com/anthropics/courses/tree/master/tool_use">function calling</a> 기능이 잘 정리되어 있어서 어렵지 않게 적용할 수 있었습니다. 웹 검색은 <a href="https://www.perplexity.ai/">Perplexity</a>를 사용하기로 했습니다. LLM이 LLM을 호출하여 추가 정보를 습득하도록 구조를 만들었습니다. 그리고 LLM을 조사하면서 아래와 같은 특징들을 확인 할 수 있었습니다.</p>

<ul>
  <li>Antrophic Claude: 글쓰기에 특화</li>
  <li>Perplexity: 웹 검색에 특화</li>
  <li>Cohere: RAG(검색증강생성)에 특화</li>
  <li>OpenAI: 두루두루 잘함</li>
</ul>

<p>미래에는 특정 분야에 전문화된 LLM들이 많이 나올 것이고, 하나의 LLM에 의존하기 보다는 Agent를 활용해서 전문화된 LLM들로 부터 정보를 취합, 정리하는 방식으로 인공지능이 발전할 것으로 예상이 됩니다.</p>

<p>2부에서는 본격적인 개발 내용을 써 볼까 합니다.</p>

<p>감사합니다.</p>]]></content><author><name></name></author><category term="chat-vibe" /><summary type="html"><![CDATA[Chat Vibe 개발기를 여러분들과 공유하려고 합니다. Chat Vibe는 사용자의 질문에 감성적이고 친근하게 대답해 주는 챗봇입니다. Github에 오픈 소스로 공개 되어 있으니 꼭 방문해서 ⭐ 눌러 주세요~]]></summary></entry><entry><title type="html">Chat Vibe - 3D Character for the good vibes.</title><link href="http://localhost:4000/chat-vibe/2024/08/29/3d-character.html" rel="alternate" type="text/html" title="Chat Vibe - 3D Character for the good vibes." /><published>2024-08-29T00:32:00+09:00</published><updated>2024-08-29T00:32:00+09:00</updated><id>http://localhost:4000/chat-vibe/2024/08/29/3d-character</id><content type="html" xml:base="http://localhost:4000/chat-vibe/2024/08/29/3d-character.html"><![CDATA[<p>자연스러운 캐릭터의 움직임과 표정 변화를 구현하기 위해서 캐릭터를 3D로 변경하였습니다.</p>

<p><img src="/assets/expression.gif" alt="expression" /></p>

<p>3D 라이브러리는 <a href="https://threejs.org/">three.js</a>와 <a href="https://github.com/pixiv/three-vrm">three-vrm</a>를 사용하였고 표정은 VRM(VR용 인간형 3D 모델링 파일 포맷)에서 제공하는 기본 Expression을 사용하여 구현하였습니다.</p>

<h2 id="1-사용된-소프트웨어">1. 사용된 소프트웨어</h2>

<ul>
  <li><a href="https://vroid.com/en/studio">VRoid Studio</a>: 인간형 3D 모델링 무료 소프트웨어. 모델링 지식이 없어도 쉽게 캐릭터를 제작할 수 있습니다.</li>
  <li><a href="https://www.blender.org/">Blender 4.1</a>: 무료 3D 컴퓨터 그래픽 제작 소프트웨어. 최신 버젼은 기존 플러그인을 사용할 수 없어서 4.1을 사용하였습니다.</li>
  <li><a href="https://www.mixamo.com/">Mixamo</a>: 3D 캐릭터의 다양한 동작을 다운 받을 수 있는 사이트입니다.</li>
  <li><a href="https://vrm-addon-for-blender.info/en/">VRM Add-on for Blender</a>: 블렌더에서 VRM 파일을 사용하기 위한 플러그인.</li>
  <li><a href="https://github.com/Rokoko/rokoko-studio-live-blender">Rokoko Blender Plugin</a>: 애니메이션 리타겟팅을 위한 블렌더 플러그인.</li>
</ul>

<h2 id="2-캐릭터-생성">2. 캐릭터 생성</h2>

<p>VRoid Studio에서 캐릭터를 생성하고 VRM 파일로 저장합니다.</p>

<h2 id="3-동작-애니메이션-생성">3. 동작 애니메이션 생성</h2>

<ul>
  <li>사용할 애니메이션을 Mixamo에서 선택하여 다운로드 합니다.</li>
  <li>Blender를 열고 생성한 VRM 캐릭터를 불러옵니다.</li>
  <li>Mixamo에서 다운받은 애니메이션을 불러옵니다.</li>
  <li>Rokoko의 <a href="https://github.com/Rokoko/rokoko-studio-live-blender#retargeting">Retargeting</a>을 사용하여 VRM 캐릭터에 애니메이션을 적용합니다.</li>
  <li>애니메이션이 적용된 캐릭터를 VRMA(VRM 애니메이션 파일 포멧)으로 저장합니다.</li>
</ul>

<h2 id="4-표정-애니메이션-생성">4. 표정 애니메이션 생성</h2>

<ul>
  <li>Blender를 열고 생성한 VRM 캐릭터를 불러옵니다.</li>
  <li>Expressions(Object &gt; VRM &gt; Expressions)에서 표정 컨트롤을 사용해서 애니메이션을 제작합니다.</li>
  <li>표정 애니메이션이 적용된 캐릭터를 VRMA(VRM 애니메이션 파일 포멧)으로 저장합니다.</li>
</ul>

<h2 id="5-클립-생성">5. 클립 생성</h2>
<ul>
  <li>three.js, three-vrm 라이브러리를 사용해서 생성한 애니메이션(VRMA)을 <a href="https://threejs.org/docs/#api/en/animation/AnimationClip">AnimationClip</a>으로 변환합니다.</li>
  <li>애니메이션 클립들을 JSON파일로 저장합니다.</li>
</ul>

<h2 id="6-적용">6. 적용</h2>
<ul>
  <li>캐릭터 VRM 파일과 애니메이션 클립 JSON 파일을 <code class="language-plaintext highlighter-rouge">static/models/</code>에 카피합니다.</li>
  <li><code class="language-plaintext highlighter-rouge">characters.json</code> 파일에 캐릭터 정보와 애니메이션 정보를 추가합니다.</li>
</ul>

<p>이제 자연스러운 캐릭터 AI와 즐겁게 채팅을 시작해 보세요!</p>]]></content><author><name></name></author><category term="chat-vibe" /><summary type="html"><![CDATA[자연스러운 캐릭터의 움직임과 표정 변화를 구현하기 위해서 캐릭터를 3D로 변경하였습니다.]]></summary></entry><entry><title type="html">Chat Vibe - Adding Shakespeare.</title><link href="http://localhost:4000/chat-vibe/2024/08/19/add-shakespeare.html" rel="alternate" type="text/html" title="Chat Vibe - Adding Shakespeare." /><published>2024-08-19T22:53:00+09:00</published><updated>2024-08-19T22:53:00+09:00</updated><id>http://localhost:4000/chat-vibe/2024/08/19/add-shakespeare</id><content type="html" xml:base="http://localhost:4000/chat-vibe/2024/08/19/add-shakespeare.html"><![CDATA[<p>🔥 <strong><code class="language-plaintext highlighter-rouge">2024/08/29</code></strong>: 캐릭터가 3D로 변경되었습니다. 따라서 이미지로 구성되어 있는 셰익스피어 캐릭터는 현재 지원하지 않습니다.</p>

<p><br /></p>

<p><a href="https://github.com/skettee/chat-vibe">Chat Vibe</a>는 캐릭터를 쉽게 추가할 수 있어요. 감정을 표현하는 캐릭터 이미지들과 프로필을 만들어서 추가해 주면 됩니다.</p>

<p>이번 포스팅은 <code class="language-plaintext highlighter-rouge">윌리엄 셰익스피어</code> 캐릭터를 만드는 과정을 순서대로 정리해 보았습니다.</p>

<h3 id="1-캐릭터-선정">1. 캐릭터 선정</h3>

<p>어떤 캐릭터를 추가하면 재미 있을까 생각하다가 소네트(Sonnet)로 가장 유명한 작가가 <code class="language-plaintext highlighter-rouge">윌리엄 셰익스피어</code>님이고 Claude Sonnet 3.5가 셰익스피어의 작품들을 학습하고 흉내를 잘 낼 것 같은 느낌이 들었습니다. ‘나무위키’와 ‘위키피디아’에서 셰익스피어님의 기본 정보를 파악하고, 추가할 캐릭터로 확정했습니다.</p>

<h3 id="2-캐릭터-이미지-생성">2. 캐릭터 이미지 생성</h3>

<p><a href="https://github.com/skettee/chat-vibe">Chat Vibe</a>는 마치 실제 사람과 대화하는 것 같은 생생한 경험을 제공하기 위해서 캐릭터의 대화 뿐만 아니라 캐릭터의 감정과 동작도 표현합니다. 그리고 감정과 동작에 따라서 캐릭터의 이미지를 다이나믹하게 변경 할 수 있습니다. 여기서는 셰익스피어님의 기본 이미지를 살아 움직이게 하기 위해서 <a href="https://github.com/KwaiVGI/LivePortrait">LivePortrait</a>를 사용하여 다양한 표정을 생성하였습니다. LivePortrait의 설치 및 사용 방법은 <a href="https://github.com/KwaiVGI/LivePortrait">Github</a>를 참조하세요.</p>

<h4 id="소스source-이미지">소스(Source) 이미지</h4>

<p><img src="/assets/shakespeare-256.png" alt="Shakespeare" /></p>

<h4 id="드라이빙driving-영상-및-이미지">드라이빙(Driving) 영상 및 이미지</h4>

<p>드라이빙 영상 및 이미지는 셀프 촬영을 했습니다. 셀프 사진이 너무 끔찍(?)해서 여기에 올리지 못한 점 양해 바랍니다.</p>

<h4 id="출력-이미지">출력 이미지</h4>

<ul>
  <li>waiting (눈 깜빡이는 이미지)</li>
</ul>

<p><img src="/assets/waiting.gif" alt="waiting" /></p>

<ul>
  <li>angry (화난 표정 이미지)</li>
</ul>

<p><img src="/assets/angry-256.jpg" alt="angry" /></p>

<ul>
  <li>happy (웃는 표정 이미지)</li>
</ul>

<p><img src="/assets/happy-256.jpg" alt="happy" /></p>

<ul>
  <li>thinking (생각하는 표정 이미지)</li>
</ul>

<p><img src="/assets/thinking-256.jpg" alt="thinking" /></p>

<h3 id="3-캐릭터-프로필-생성">3. 캐릭터 프로필 생성</h3>

<p>Claude Sonnet 3.5가 셰익스피어님 처럼 말하게 하기 위해서는 프롬프트(prompt)에 관련 정보를 입력해야 합니다. <a href="https://github.com/skettee/chat-vibe">Chat Vibe</a>에서는 JSON 포맷으로 아래와 같이 작성하면 됩니다.</p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="nl">"profile"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Shakespeare"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"gender"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Male"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"age"</span><span class="p">:</span><span class="w"> </span><span class="mi">45</span><span class="p">,</span><span class="w">
    </span><span class="nl">"job"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AI assistant"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"speaking"</span><span class="p">:</span><span class="w"> </span><span class="s2">"talking like Shakespeare."</span><span class="p">,</span><span class="w">
    </span><span class="nl">"personality"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Performing Shakespeare"</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<h3 id="4-코드에-적용">4. 코드에 적용</h3>

<p>파일 추가</p>

<p><a href="https://github.com/skettee/chat-vibe">Chat Vibe</a> 소스 코드에서 <code class="language-plaintext highlighter-rouge">static/shakespeare</code> 폴더를 생성하고 여기에 캐릭터 이미지들을 카피합니다.</p>

<p>캐릭터 추가</p>

<p><code class="language-plaintext highlighter-rouge">src/lib/data/characters.json</code> 파일을 열어서 캐릭터를 추가합니다.</p>

<figure class="highlight"><pre><code class="language-json" data-lang="json"><span class="p">{</span><span class="w">
    </span><span class="nl">"default"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="err">...</span><span class="p">},</span><span class="w">
    </span><span class="nl">"shakespeare"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Shakespeare"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"image"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"./shakespeare/shakespeare.png"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"greeting"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"text"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"Heigh ho"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"image"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"./shakespeare/waiting.gif"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"profile"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Shakespeare"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"gender"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Male"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"age"</span><span class="p">:</span><span class="w"> </span><span class="mi">45</span><span class="p">,</span><span class="w">
            </span><span class="nl">"job"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AI assistant"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"speaking"</span><span class="p">:</span><span class="w"> </span><span class="s2">"talking like Shakespeare."</span><span class="p">,</span><span class="w">
            </span><span class="nl">"personality"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Performing Shakespeare"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"expression"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"angry"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"angry, mad, annoyed, unhappy"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./shakespeare/angry.jpg"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"happy"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"happy, smile, laughing, playful, prank"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./shakespeare/happy.jpg"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"thinking"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"thinking, serious, concerned, worried"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./shakespeare/thinking.jpg"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="nl">"waiting"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"waiting, curious, expecting, exciting"</span><span class="p">,</span><span class="w">
                </span><span class="nl">"image"</span><span class="p">:</span><span class="w"> </span><span class="s2">"./shakespeare/waiting.gif"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<h3 id="5-대화">5. 대화</h3>

<p><a href="https://github.com/skettee/chat-vibe">Chat Vibe</a> 최신 버전에 셰익스피어 캐릭터가 추가되어 있습니다. 실행 후, 왼쪽 상단의 메뉴에서 <code class="language-plaintext highlighter-rouge">Shakespeare</code>를 선택하고 대화를 시작해 보세요.</p>

<p><img src="/assets/screenshot-720.png" alt="screenshot" /></p>

<p>셰익스피어님은 옛날 영어를 사용하시는 것 같습니다. 하나도 알아듣지 못하겠습니다 TT</p>

<p>영문학 전공하신 분이 계시면 평가 부탁 드립니다.</p>]]></content><author><name></name></author><category term="chat-vibe" /><summary type="html"><![CDATA[🔥 2024/08/29: 캐릭터가 3D로 변경되었습니다. 따라서 이미지로 구성되어 있는 셰익스피어 캐릭터는 현재 지원하지 않습니다.]]></summary></entry><entry><title type="html">Chat Vibe - Chatbot for the good vibes.</title><link href="http://localhost:4000/chat-vibe/2024/08/19/chat-vibe.html" rel="alternate" type="text/html" title="Chat Vibe - Chatbot for the good vibes." /><published>2024-08-19T01:52:00+09:00</published><updated>2024-08-19T01:52:00+09:00</updated><id>http://localhost:4000/chat-vibe/2024/08/19/chat-vibe</id><content type="html" xml:base="http://localhost:4000/chat-vibe/2024/08/19/chat-vibe.html"><![CDATA[<p><img src="/assets/intro-chat-vibe.gif" alt="intro-chat-vibe" /></p>

<p><a href="https://github.com/skettee/chat-vibe">Chat Vibe 바로가기</a></p>

<p>안녕하세요! Chat Vibe를 소개해 드릴게요. 지루한 대화는 이제 그만, 감성적이고 친근한 AI 친구를 만나보세요!</p>

<p>🎭 Chat Vibe: 당신만의 특별한 AI 친구
지식을 딱딱하게 나열하는 AI는 잊으세요. Chat Vibe는 마치 실제 친구와 대화하는 것처럼 자연스럽고 재미있게 정보를 전달합니다. 무미건조한 대화 대신, 감정이 살아있는 대화를 즐겨보세요!</p>

<p>😀 감정표현의 달인
Chat Vibe는 단순히 정보만 주는 게 아니에요. 당신의 말에 공감하고, 때로는 재치 있게, 때로는 진지하게 반응합니다. 마치 실제 사람과 대화하는 것 같은 생생한 경험을 선사해 드릴게요.</p>

<p>🦸 믿을 수 있는 정보 제공
허황된 이야기는 No! Chat Vibe는 최신 AI 기술을 활용해 정확한 정보만을 제공합니다. 필요하다면 웹 검색도 해서 최신 정보를 찾아드려요.</p>

<p>🔎 궁금한 게 있다면 물어보세요
복잡한 주제도 걱정 마세요. Chat Vibe가 웹을 검색해 꼭 필요한 정보를 찾아드립니다. 어려운 내용도 쉽고 재미있게 설명해 드릴게요.</p>

<p>🕵️ 투명한 대화
Chat Vibe의 독특한 기능! AI의 원래 답변도 따로 볼 수 있어요. 어떻게 대화가 바뀌었는지 직접 확인해보세요.</p>

<p>🛡️ 안전한 개인정보 보호
당신의 대화 내용은 오직 당신의 기기에만 저장됩니다. 안심하고 대화를 즐기세요.</p>

<p>📜 보기 좋은 대화 기록
마크다운 지원으로 대화 내용을 깔끔하게 정리해드려요. 코드도 예쁘게 하이라이팅 해드립니다!</p>

<p>🌟 계속해서 진화하는 Chat Vibe
새로운 기능들이 계속 추가될 예정이에요. 당신의 AI 친구 Chat Vibe와 함께 성장해보세요!</p>

<p>지금 바로 Chat Vibe와 대화를 시작해보세요. 똑똑하면서도 친근한 AI 친구가 당신을 기다리고 있습니다!</p>]]></content><author><name></name></author><category term="chat-vibe" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">막돼먹은 엔지니어의 머신러닝 개발</title><link href="http://localhost:4000/deeplearning/2024/08/18/deepl-notebook.html" rel="alternate" type="text/html" title="막돼먹은 엔지니어의 머신러닝 개발" /><published>2024-08-18T23:07:00+09:00</published><updated>2024-08-18T23:07:00+09:00</updated><id>http://localhost:4000/deeplearning/2024/08/18/deepl-notebook</id><content type="html" xml:base="http://localhost:4000/deeplearning/2024/08/18/deepl-notebook.html"><![CDATA[<p>딥러닝 모델링 &amp; 강화학습 알고리듬을 학습하기 위한 주피터 노트북입니다.</p>

<p><a href="https://github.com/skettee/deepl-notebook">‘막돼먹은 엔지니어의 머신러닝 개발’ 바로가기</a></p>

<p>목차</p>

<ol>
  <li>선형 회귀 (Linear Regression)</li>
  <li>로지스틱 회귀 (Logistic Regression)</li>
  <li>뉴럴 네트워크 (Neural Network)</li>
  <li>뉴럴 네트워크 (NN) - MNIST</li>
  <li>Convolutional Neural Network (CNN)</li>
  <li>잠재 인수 모델 (Latent Factor Model)</li>
  <li>Recurrent Neural Network (RNN)</li>
  <li>Long Short-Term Memory (LSTM)</li>
  <li>Monte Carlo Learning</li>
  <li>SARSA Learning</li>
  <li>Q-Learning</li>
  <li>Q 네트워크 (Q-Networks)</li>
  <li>Policy Gradient (PG)</li>
</ol>]]></content><author><name></name></author><category term="deeplearning" /><summary type="html"><![CDATA[딥러닝 모델링 &amp; 강화학습 알고리듬을 학습하기 위한 주피터 노트북입니다.]]></summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2024/08/18/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2024-08-18T15:29:55+09:00</published><updated>2024-08-18T15:29:55+09:00</updated><id>http://localhost:4000/jekyll/update/2024/08/18/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2024/08/18/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry></feed>